# -----------------
# Zsh configuration
# -----------------

# !DEFAULT-CONFIG!

# Case-insensitive
autoload -Uz compinit && compinit
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}'

# Autocomplete
# source /usr/local/share/zsh-autocomplete/zsh-autocomplete.plugin.zsh

#
# History
#

# Remove older command from the history if a duplicate is to be added.
setopt HIST_IGNORE_ALL_DUPS

#
# Input/output
#

# Set editor default keymap to emacs (`-e`) or vi (`-v`)
bindkey -e

# Prompt for spelling correction of commands.
#setopt CORRECT

# Customize spelling correction prompt.
#SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '

# Remove path separator from WORDCHARS.
WORDCHARS=${WORDCHARS//[\/]}

# Set up fzf key bindings and fuzzy completion
# source <(fzf --zsh)

# bun completions
[ -s "/home/kinxyo/.bun/_bun" ] && source "/home/kinxyo/.bun/_bun"

# !PATH!

# Android Studio
export ANDROID_SDK_ROOT=$HOME/Android/Sdk/
export PATH=$PATH:$ANDROID_SDK_ROOT/emulator
export PATH=$PATH:$ANDROID_SDK_ROOT/tools
export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools

# Kitty
export PATH="$PATH:~/.local/kitty.app"

# Rust LSP
export PATH="$PATH:$HOME/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rust-analyzer"

# Go LSP
export PATH="$PATH:$HOME/go/bin/"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# go
export PATH=$PATH:/usr/local/go/bin

# act
export PATH=$PATH:$HOME/Applications/Act/

# WebStorm
export PATH=$PATH:$HOME/Applications/WebStorm-241.17890.13/bin/

# Swift
export PATH=/usr/local/swift/usr/bin:"$PATH"

# !ALIAS!

# languages
alias python="python3"
alias py="python"
alias killemu="adb devices | grep emulator | cut -f1 | while read line; do adb -s $line emu kill; done"
alias nuxtup="bunx nuxi@latest init"

# qol
alias e="fg"
alias gr="go run main.go"
alias zr="zig run";
alias gts="ghostty +list-themes";
alias zrm="zig run main.zig";
alias crun="clang *.c && ./a.out";
alias mr="make run"; # For Go Makefile
alias q="exit"
alias hostup="sudo ufw enable"
alias hostoff="sudo ufw disable"
alias b="cd .."
alias ls="ls --color=auto"
alias v="hx ."
alias train="cd ~/Downloads/train/"
alias learn="cd ~/Documents/Learn/"
alias trash="cd ~/Documents/Learn/tmp/"
alias work="cd ~/Documents/ProductionGrade/"
alias -g dsa="cd ~/Documents/DSA/"
alias gos="cd ~/Documents/ProductionGrade/go-share/"
alias -g corp="cd ~/Documents/Corporate/JKCSoftwares"
alias -g corpc="cd ~/Documents/Corporate/JKCSoftwares/CRM"
alias -g corpjc="cd ~/Documents/Corporate/JKCSoftwares/IndiaBills/client"
alias -g corph="cd ~/Documents/Corporate/JKCSoftwares/HandoverIB"
alias -g corpjs="cd ~/Documents/Corporate/JKCSoftwares/IndiaBills/server"
alias -g corpg="cd ~/Documents/Corporate/JKCSoftwares/IndiaBills/idmsgo"
alias p1="cd ~/Documents/Learn/go/project1"
alias -g corpp="cd ~/Documents/Corporate/JKCSoftwares/planboard"
alias -g corpv="cd ~/Documents/Corporate/JKCSoftwares/Casino/vid-tool"
alias -g corpr="cd ~/Documents/Corporate/JKCSoftwares/rewrite"
alias -g corpw="cd ~/Documents/Corporate/JKCSoftwares/wix"
alias -g dpr="cd ~/Documents/Corporate/JKCSoftwares/DPR"
alias add="sudo apt install"
alias fd="fdfind"
alias clr="clear"
alias cat="batcat"
alias -g peak="-X batcat"
alias tree="tree -L 3 -I \"node_modules|.git|target|tmp|venv\""
alias treec="tree -L 3 -I \"node_modules|.git|target|tmp|venv\" | xclip -selection clipboard"
alias treem="tree -L 4 -I \"node_modules|.git|target|tmp|venv\""
alias treemc="tree -L 4 -I \"node_modules|.git|target|tmp|venv\" | xclip -selection clipboard"
alias treef="tree -L 10 -I \"node_modules|.git|target|tmp|venv\""
alias treefc="tree -L 10 -I \"node_modules|.git|target|tmp|venv\" | xclip -selection clipboard"
alias del="rm -rf"
alias desks="cd ~/.local/share/applications"
alias jhora="wine ~/.wine/drive_c/Program\ Files\ \(x86\)/Jagannatha\ Hora/bin/jhora.exe"
alias zed="~/.local/bin/zed"
alias kss="kitty --start-as fullscreen"
alias openup="ssh root@88.222.214.174"
alias dps='docker ps --format '\''table {{.ID}}\t{{.Names}}\t{{.Status}}'\'''

# configurations
alias zconf="hx ~/.zshrc"
alias zrc="source ~/.zshrc" # Stands for `zsh source`
alias sconf="hx ~/.config/starship.toml"
alias hxconf="hx ~/.config/helix/"
alias hxc="hx ~/.config/helix/config.toml"
alias zconfv="vim ~/.zshrc"
alias tconf="hx ~/.tmux.conf"
alias kconf="hx ~/.config/kitty/kitty.conf"
alias gconf="hx ~/.config/ghostty/config"
alias copy="xclip -selection clipboard"
alias m="menu"
alias gth="ghostty +list-themes"

# system fix
alias quiet="echo 0 | sudo tee /sys/module/snd_hda_intel/parameters/power_save_controller
echo 0 | sudo tee /sys/module/snd_hda_intel/parameters/power_save
"
alias predock="sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0"
alias camera="systemctl --user restart pipewire"
alias internet="sudo iwconfig wlp0s20f3 power off"

# system info
alias xorw="echo $XDG_SESSION_TYPE"
alias ds5="sudo modprobe -r hid_playstation"

# !INITIALIZATIONS!

# starship 
eval "$(starship init zsh)"

# fnm
export PATH="/home/kinxyo/.local/share/fnm:$PATH"
eval "`fnm env`"

eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

#ZED (sus)
export PATH=$HOME/.local/bin:$PATH

#Zig (language server)
export PATH=$HOME/Applications/zig:$PATH
export PATH=$HOME/Applications/zls:$PATH

#OpenCV 
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH

#Clang
export CC=clang
export CXX=clang++

# Workspace switching aliases
# alias ws2='ydotool key 125:1 3:1 3:0 125:0'
# alias ws3='ydotool key 125:1 4:1 4:0 125:0'
# alias ws4='ydotool key 125:1 5:1 5:0 125:0'
# alias ws5='ydotool key 125:1 6:1 6:0 125:0'
# alias ws6='ydotool key 125:1 7:1 7:0 125:0'
# alias ws7='ydotool key 125:1 8:1 8:0 125:0'
# alias ws8='ydotool key 125:1 9:1 9:0 125:0'
# alias ws9='ydotool key 125:1 10:1 10:0 125:0'


# GHOSTTY_PID=$(pgrep -n ghostty)

# if [ ! -f "/tmp/.ghostty-banner-$GHOSTTY_PID" ]; then
#   figlet "kinxyo    v2.3" | lolcat --animate --speed=80 
#   # figlet "kinxyo    v2.3" | lolcat 
#   touch "/tmp/.ghostty-banner-$GHOSTTY_PID"
# fi

# precmd() {
#  print -P "%F{blue}┏ %D{%A, %F %T}%f"
# }

# Fuzzy find and preview files
ff() {
  local file
  file=$(fd . --type f | fzf --preview 'batcat --style=numbers --color=always --line-range=:500 {}')
  if [ -n "$file" ]; then
    local full_path
    full_path="$(pwd)/$file"
    echo "$full_path" | xclip -selection clipboard
  fi
}

# Fuzzy find and edit files  
fdf() {
  local file
  file=$(fd . \
    --type f \
    --hidden \
    --no-ignore \
    --exclude node_modules \
    --exclude tmp \
    | fzf --preview 'batcat --style=numbers --color=always --line-range=:500 {}')
  [ -n "$file" ] && hx "$file"
}

fvvid() {
  local video
  video=$(fd . ~/Videos --type f --hidden --exclude node_modules \
  | grep -iE '\.(mp4|mkv|avi|mov|webm|flv|wmv)$' \
  | fzf --preview '
      ffmpeg -ss 10 -i {} -vframes 1 -vf "scale=300:170:force_original_aspect_ratio=decrease" -q:v 2 /tmp/thumb.jpg -y -loglevel quiet && \
      chafa --size=40x20 --symbols=block --colors=16 /tmp/thumb.jpg || echo "Preview failed"
    ' \
    --prompt="Find video: " --height=40% --reverse)

  if [ -n "$video" ]; then
    setsid nohup mpv "$video" > /dev/null 2>&1 &
    disown
    sleep 0.5
    exit 0
  else
    echo "No video selected or an error occurred."
  fi
}

# Start go-share server
start_share() {
 echo "Starting go-share server..."
 gos && mr
}

# Quick shutdown
quick_shutdown() {
 echo "Goodbye!"
 exit 0
}

# Settings
settings() {
 hx ~/.zshrc
}

# Ghostty
g_settings() {
  gconf
}

# Helix
helix_settings() {
  hxconf
}

# Starship
s_settings() {
  sconf
}

# Recent
recent() {
  clear
  corpg
}

menu() {
# Interactive menu
echo "
[+] Browse files
[-] Open file in Helix  
[x] Play video
[/] Continue
[.] Share
"

# local spin='⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏'
local spin='▁▃▄▅▆▇█▇▆▅▄▃'
# local spin='○◔◐◕●◕◐◔'
# local spin='←↖↑↗→↘↓↙'
# local spin='◐◓◑◒'
local i=0

while true; do
  printf "\r${spin:$((i%4)):1} "
  ((i++)) 

  if read -k 1 -t 0.08 opt 2>/dev/null; then
    printf "\r  \r"
    echo
    break
  fi
done

case $opt in
  1) ff ;;
  2) fdf ;;
  3 | 'v') fvvid ;;
  4 | 'q') clear ;;
  5 | '.') start_share ;;
  # Setting options
  'z') settings ;;
  'r') recent ;;
  'g') g_settings ;;
  'h') helix_settings ;;
  's') s_settings ;;
  *) quick_shutdown ;;
esac  
}

# echo "%F{green}🔋 $(acpi | cut -d',' -f 2-)   🕒 $(date '+%I:%M %p')%f"

# if [ "$SHLVL" -eq 1 ]; then
#   menu
# fi

# raster2svg
svgcon() {
  for img in "$@"; do
    name=$(basename "$img" | cut -d. -f1)
    echo "Processing $img..."

    convert "$img" "$name.pbm" || { echo "convert failed"; return 1; }
    potrace "$name.pbm" -s -o "$name.svg" || { echo "potrace failed"; return 1; }
    rm "$name.pbm"

    echo "Saved as $name.svg"
  done
}

export EDITOR=hx
